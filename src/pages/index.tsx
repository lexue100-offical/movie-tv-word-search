import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
	const [value, setValue] = useState<string>("");
	const { data, refetch } = trpc.useQuery(
		["resources.resources", { text: value }],
		{
			enabled: false,
		}
	);
	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
				<div>
					<input
						type="text"
						className="p-2 empty:ring-2 empty:ring-green-400 rounded"
						value={value}
						onChange={e => setValue(e.target.value)}
					/>
					<button
						onClick={() => {
							refetch();
						}}
					>
						查询
					</button>
				</div>

				{data?.data && (
					<div className="grid grid-cols-3 grid-rows-3">
						{data.data
							.filter(s => s.endsWith("mp4"))
							.map(s => (
								<video key={s} src={s}></video>
							))}
					</div>
				)}
			</main>
		</>
	);
};

export default Home;

type TechnologyCardProps = {
	name: string;
	description: string;
	documentation: string;
};

const TechnologyCard = ({
	name,
	description,
	documentation,
}: TechnologyCardProps) => {
	return (
		<section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
			<h2 className="text-lg text-gray-700">{name}</h2>
			<p className="text-sm text-gray-600">{description}</p>
			<a
				className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
				href={documentation}
				target="_blank"
				rel="noreferrer"
			>
				Documentation
			</a>
		</section>
	);
};
