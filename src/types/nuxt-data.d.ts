// Generated by https://quicktype.io

export interface NuxtData {
	layout: string;
	data: Datum[];
	fetch: Fetch[];
	error: null;
	state: State;
	serverRendered: boolean;
	routePath: string;
	config?: unknown;
}

export interface Datum {
	all: All;
	clips: Clip[];
	aggregates: Aggregate[];
	hitCount: number;
}

export interface Aggregate {
	title: string;
	buckets: Bucket[];
	position: number;
}

export interface Bucket {
	key: number | string;
	doc_count: number;
	filteredUrl: string;
	label?: number | string;
}

export interface All {
	clip: Clip;
	clips: Clip[];
	aggregates: Aggregate[];
	hitCount: number;
	total: number;
}

export interface Clip {
	id: number;
	uuid: string;
	memeParentUuid: string;
	teamId: number;
	transcript: string;
	transcriptShort: string;
	rating: number;
	sourceUrl: string;
	prevUuid: string;
	nextUuid: string;
	jpg: string;
	jpgMed: string;
	gif: string;
	gifHi: string;
	gifSmall: string;
	gifSmallClean: string;
	mp4: string;
	textMp4: string;
	duration: number;
	contentType: Type | null;
	isMovie: boolean;
	isShow: boolean;
	isMusic: boolean;
	unknownType: boolean;
	peopleIds: unknown[];
	characterIds: unknown[];
	startTime: number;
	endTime: number;
	videoId: number;
	videoTitle: string;
	videoType: Type;
	videoUuid: string;
	transcriptEscaped: string;
	isMeme: boolean;
	score: number;
}

export enum Type {
	Empty = "",
	Movie = "movie",
}

export interface Fetch {
	pg: PG;
	teamData: Team;
	playlist: FetchPlaylist;
	isToggleOn: boolean;
}

export interface PG {
	RAILS_HOST: string;
	host: string;
	root: string;
	assetRoot: string;
	originalUrl: string;
	ua: Ua;
	isIosOrAndroid: boolean;
	isIos10: boolean;
	teamData: Team;
	teamId: number;
	mappedTeamId: string;
	isDesktop: boolean;
	isMeme: boolean;
	isPublicTeam: boolean;
	memeHost: string;
	yarnHost: string;
	shortId: string;
	suggest: string;
	showYarncoVideoAds: boolean;
	showGetyarnVideoAds: boolean;
	showGoogleAds: boolean;
	loggedIn: boolean;
	twitterPlayer: boolean;
	isTwitter: boolean;
	showText: boolean;
	showAnimatedGif: boolean;
	showMemeCreate: boolean;
	textRoute: string;
	gifRoute: string;
	searchText: string;
}

export interface Team {
	id: number;
	token: string;
	team_title: string;
	sub: string;
	hasAds: boolean;
	hasOverlay: boolean;
	isYarnIcon: boolean;
	logoIcon: string;
	favicon: string;
	logo: string;
	logoH: number;
	logoW: number;
	navbarClass: string;
	accountLayout: string;
	videosLayout: string;
	clipLayout: string;
	clipsLayout: string;
	isYarnSite: boolean;
	isAuthenticated: boolean;
	isMeme: boolean;
	features: Features;
}

export interface Features {
	isTaylor: boolean;
	hasStories: boolean;
	hasQuiz: boolean;
	isNewNav: boolean;
	upload: boolean;
	userClips: boolean;
	fullVideo: boolean;
}

export interface Ua {
	iOS: boolean;
	iOS10: boolean;
	iPhone: boolean;
	android: boolean;
	webkit: boolean;
	iPhoneSafari: boolean;
	isIosOrAndroid: boolean;
}

export interface FetchPlaylist {
	clips: unknown[];
}

export interface State {
	isSeinfed: boolean;
	brand: string;
	isBot: boolean;
	pg: PG;
	session: Session;
	team: Team;
	error: Error;
	isSnigelLoaded: boolean;
	isGoogleLoaded: boolean;
	basket: Basket;
	character: Basket;
	contentRequest: Basket;
	integration: Basket;
	interaction: Basket;
	interactionRollup: Basket;
	logging: Config;
	meme: Basket;
	oscars: Config;
	person: Basket;
	playlist: StatePlaylist;
	playlistItem: Basket;
	quiz: Basket;
	slack: Config;
	smalltalk: Basket;
	streamingNow: Basket;
	tagging: Basket;
	todos: Todos;
	user: Basket;
	video: Video;
	videoLogItem: Basket;
	vote: Config;
	yarnAuth: YarnAuthClass;
	modules: Modules;
	auth: AuthClass;
}

export interface AuthClass {
	user: null;
	loggedIn: boolean;
	strategy: string;
}

export interface Basket {
	byId: Config;
	ids: unknown[];
}

export interface Error {
	serverMsg: string;
}

export interface Modules {
	mauth: YarnAuthClass;
	"yarn-discover": YarnDiscover;
}

export interface YarnAuthClass {
	user: null;
}

export interface YarnDiscover {
	list: unknown[];
	data: Config;
}

export interface StatePlaylist {
	byId: Config;
	ids: unknown[];
	playlist: null;
}

export interface Session {
	cookie: Cookie;
}

export interface Cookie {
	originalMaxAge: null;
	expires: null;
	httpOnly: boolean;
	domain: string;
	path: string;
}

export interface Todos {
	list: unknown[];
}

export interface Video {
	byId: Config;
	ids: unknown[];
	allIds: unknown[];
	ui: UI;
}

export interface UI {
	play: Config;
}
